<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Klein.dao.EntertainmentDao">

    <resultMap id="BaseResultMap" type="com.example.Klein.entity.Entertainment">
        <!--@Table entertainment-->
        <result property="entertainmentId" column="entertainment_Id" jdbcType="INTEGER"/>
        <result property="entertainmentName" column="entertainment_Name" jdbcType="VARCHAR"/>
        <result property="entertainmentType" column="entertainment_Type" jdbcType="VARCHAR"/>
        <result property="scenicAreaId" column="scenic_Area_Id" jdbcType="INTEGER"/>
        <result property="icon" column="Icon" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          entertainment_Id, entertainment_Name, entertainment_Type, scenic_Area_Id, Icon
        from entertainment
        where entertainment_Id = #{entertainmentId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          entertainment_Id, entertainment_Name, entertainment_Type, scenic_Area_Id, Icon
        from entertainment
        <where>
            <if test="entertainmentId != null">
                and entertainment_Id = #{entertainmentId}
            </if>
            <if test="entertainmentName != null and entertainmentName != ''">
                and entertainment_Name = #{entertainmentName}
            </if>
            <if test="entertainmentType != null and entertainmentType != ''">
                and entertainment_Type = #{entertainmentType}
            </if>
            <if test="scenicAreaId != null">
                and scenic_Area_Id = #{scenicAreaId}
            </if>
            <if test="icon != null and icon != ''">
                and Icon = #{icon}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          entertainment_Id, entertainment_Name, entertainment_Type, scenic_Area_Id, Icon
        from klein.entertainment
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from entertainment
        <where>
            <if test="entertainmentId != null">
                and entertainment_Id = #{entertainmentId}
            </if>
            <if test="entertainmentName != null and entertainmentName != ''">
                and entertainment_Name = #{entertainmentName}
            </if>
            <if test="entertainmentType != null and entertainmentType != ''">
                and entertainment_Type = #{entertainmentType}
            </if>
            <if test="scenicAreaId != null">
                and scenic_Area_Id = #{scenicAreaId}
            </if>
            <if test="icon != null and icon != ''">
                and Icon = #{icon}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="entertainmentId" useGeneratedKeys="true">
        insert into entertainment(entertainment_Name, entertainment_Type, scenic_Area_Id, Icon)
        values (#{entertainmentName}, #{entertainmentType}, #{scenicAreaId}, #{icon})
    </insert>

    <insert id="insertBatch" keyProperty="entertainmentId" useGeneratedKeys="true">
        insert into entertainment(entertainment_Name, entertainment_Type, scenic_Area_Id, Icon)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.entertainmentName}, #{entity.entertainmentType}, #{entity.scenicAreaId}, #{entity.icon})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="entertainmentId" useGeneratedKeys="true">
        insert into entertainment(entertainment_Name, entertainment_Type, scenic_Area_Id, Icon)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.entertainmentName}, #{entity.entertainmentType}, #{entity.scenicAreaId}, #{entity.icon})
        </foreach>
        on duplicate key update
        entertainment_Name = values(entertainment_Name),
        entertainment_Type = values(entertainment_Type),
        scenic_Area_Id = values(scenic_Area_Id),
        Icon = values(Icon)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update entertainment
        <set>
            <if test="entertainmentName != null and entertainmentName != ''">
                entertainment_Name = #{entertainmentName},
            </if>
            <if test="entertainmentType != null and entertainmentType != ''">
                entertainment_Type = #{entertainmentType},
            </if>
            <if test="scenicAreaId != null">
                scenic_Area_Id = #{scenicAreaId},
            </if>
            <if test="icon != null and icon != ''">
                Icon = #{icon},
            </if>
        </set>
        where entertainment_Id = #{entertainmentId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from entertainment where entertainment_Id = #{entertainmentId}
    </delete>
    <!--通过景区Id查找餐饮娱乐-->
    <select id="queryEntertainmentByScenicAreaId" resultMap="BaseResultMap">
        select
            entertainment_Id, entertainment_Name, entertainment_Type, scenic_Area_Id, Icon
        from entertainment
        where scenic_Area_Id=#{scenicAreaId}
    </select>
    <!--通过景区名查找餐饮娱乐-->
    <select id="queryEntertainmentByScenicAreaName" resultMap="BaseResultMap">
        select
            entertainment_Id, entertainment_Name, entertainment_Type, entertainment.scenic_Area_Id, Icon
        from scenic_area,entertainment
        where scenic_area.scenic_Area_Name=#{scenicAreaName} and scenic_area.scenic_Area_Id=entertainment.scenic_Area_Id
    </select>
</mapper>

