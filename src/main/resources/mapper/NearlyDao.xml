<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Klein.dao.NearlyDao">

    <resultMap id="BaseResultMap" type="com.example.Klein.entity.Nearly">
        <!--@Table nearly-->
        <result property="nearlyId" column="nearly_Id" jdbcType="INTEGER"/>
        <result property="scenicAreaId" column="scenic_Area_Id" jdbcType="INTEGER"/>
        <result property="hotelId" column="hotel_Id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          nearly_Id, scenic_Area_Id, hotel_Id
        from nearly
        where nearly_Id = #{nearlyId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          nearly_Id, scenic_Area_Id, hotel_Id
        from nearly
        <where>
            <if test="nearlyId != null">
                and nearly_Id = #{nearlyId}
            </if>
            <if test="scenicAreaId != null">
                and scenic_Area_Id = #{scenicAreaId}
            </if>
            <if test="hotelId != null">
                and hotel_Id = #{hotelId}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          nearly_Id, scenic_Area_Id, hotel_Id
        from klein.nearly
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from nearly
        <where>
            <if test="nearlyId != null">
                and nearly_Id = #{nearlyId}
            </if>
            <if test="scenicAreaId != null">
                and scenic_Area_Id = #{scenicAreaId}
            </if>
            <if test="hotelId != null">
                and hotel_Id = #{hotelId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="nearlyId" useGeneratedKeys="true">
        insert into nearly(scenic_Area_Id, hotel_Id)
        values (#{scenicAreaId}, #{hotelId})
    </insert>

    <insert id="insertBatch" keyProperty="nearlyId" useGeneratedKeys="true">
        insert into nearly(scenic_Area_Id, hotel_Id)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.scenicAreaId}, #{entity.hotelId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="nearlyId" useGeneratedKeys="true">
        insert into nearly(scenic_Area_Id, hotel_Id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.scenicAreaId}, #{entity.hotelId})
        </foreach>
        on duplicate key update
        scenic_Area_Id = values(scenic_Area_Id),
        hotel_Id = values(hotel_Id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update nearly
        <set>
            <if test="scenicAreaId != null">
                scenic_Area_Id = #{scenicAreaId},
            </if>
            <if test="hotelId != null">
                hotel_Id = #{hotelId},
            </if>
        </set>
        where nearly_Id = #{nearlyId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from nearly where nearly_Id = #{nearlyId}
    </delete>

</mapper>

