<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Klein.dao.RoomOrderDao">

    <resultMap id="BaseResultMap" type="com.example.Klein.entity.RoomOrder">
        <!--@Table room_order-->
        <result property="orderId" column="order_Id" jdbcType="INTEGER"/>
        <result property="orderDescription" column="order_description" jdbcType="VARCHAR"/>
        <result property="visitorId" column="visitor_id" jdbcType="INTEGER"/>
        <result property="hotelId" column="hotel_id" jdbcType="INTEGER"/>
        <result property="result" column="result" jdbcType="INTEGER"/>
        <result property="stars" column="stars" jdbcType="FLOAT"/>
        <result property="orderTime" column="order_time" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          order_Id, order_description, visitor_id, hotel_id, result,stars,order_time
        from room_order
        where order_Id = #{orderId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          order_Id, order_description, visitor_id, hotel_id, result,stars,order_time
        from room_order
        <where>
            <if test="orderId != null">
                and order_Id = #{orderId}
            </if>
            <if test="orderDescription != null and orderDescription != ''">
                and order_description = #{orderDescription}
            </if>
            <if test="visitorId != null">
                and visitor_id = #{visitorId}
            </if>
            <if test="hotelId != null">
                and hotel_id = #{hotelId}
            </if>
            <if test="result != null">
                and result = #{result}
            </if>
            <if test="stars != null">
                and stars = #{stars}
            </if>
            <if test="orderTime != null">
                and order_time = #{orderTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          order_Id, order_description, visitor_id, hotel_id, result,stars,order_time
        from klein.room_order
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from room_order
        <where>
            <if test="orderId != null">
                and order_Id = #{orderId}
            </if>
            <if test="orderDescription != null and orderDescription != ''">
                and order_description = #{orderDescription}
            </if>
            <if test="visitorId != null">
                and visitor_id = #{visitorId}
            </if>
            <if test="hotelId != null">
                and hotel_id = #{hotelId}
            </if>
            <if test="result != null">
                and result = #{result}
            </if>
            <if test="stars != null">
                and stars = #{stars}
            </if>
            <if test="orderTime != null">
                and order_time = #{orderTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="orderId" useGeneratedKeys="true">
        insert into room_order(order_description, visitor_id, hotel_id, result,stars,order_time)
        values (#{orderDescription}, #{visitorId}, #{hotelId}, #{result},#{stars},#{orderTime})
    </insert>

    <insert id="insertBatch" keyProperty="orderId" useGeneratedKeys="true">
        insert into room_order(order_description, visitor_id, hotel_id, result,stars,order_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.orderDescription}, #{entity.visitorId}, #{entity.hotelId}, #{entity.result},#{entity.stars},#{entity.orderTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="orderId" useGeneratedKeys="true">
        insert into room_order(order_description, visitor_id, hotel_id, result,stars,order_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.orderDescription}, #{entity.visitorId}, #{entity.hotelId}, #{entity.result},#{entity.stars},#{entity.orderTime})
        </foreach>
        on duplicate key update
        order_description = values(order_description),
        visitor_id = values(visitor_id),
        hotel_id = values(hotel_id),
        result = values(result),
        stars = values(stars),
        order_time = values(order_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update room_order
        <set>
            <if test="orderDescription != null and orderDescription != ''">
                order_description = #{orderDescription},
            </if>
            <if test="visitorId != null">
                visitor_id = #{visitorId},
            </if>
            <if test="hotelId != null">
                hotel_id = #{hotelId},
            </if>
            <if test="result != null">
                result = #{result},
            </if>
            <if test="stars != null">
                stars = #{stars},
            </if>
            <if test="orderTime != null">
                order_time = #{orderTime},
            </if>
        </set>
        where order_Id = #{orderId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from room_order where order_Id = #{orderId}
    </delete>
    <!--通过管理员Id查询所有订单，即当前管理员查看自己需要处理或者已经处理过的订单-->
    <select id="queryOrderByAdminId" resultMap="BaseResultMap">
        select
            order_Id, order_description, visitor_id, room_order.hotel_id, result,room_order.stars,order_time
        from room_order,hotel,management
        where management.administrator_Id=#{adminId} and management.hotel_Id=hotel.hotel_Id and hotel.hotel_Id=room_order.hotel_id

    </select>
    <!--通过游客Id查询所有订单，即游客查找自己的所有订单-->
    <select id="queryOrderByVisitorId" resultMap="BaseResultMap">
        select order_Id, order_description, visitor_id, room_order.hotel_id, result,stars,order_time
        from room_order
        where room_order.visitor_id=#{visitorId}
    </select>
    <!--通过酒店Id查找订单-->
    <select id="queryOrderByHotelId" resultMap="BaseResultMap">
        select order_Id, order_description, visitor_id, room_order.hotel_id, result,stars,order_time
        from  room_order
        where room_order.hotel_id=#{hotelId}
    </select>
    <!--查询当前游客已完成但未评价的订单-->
    <select id="queryFinisherOrderByVisitorId" resultMap="BaseResultMap">
        select order_Id, order_description, visitor_id, room_order.hotel_id, result,stars,order_time
        from  room_order
        where room_order.visitor_id=#{visitorId} and result=3
    </select>
    <!--查询当前游客已完成评价的订单-->
    <select id="queryEvaluatedOrderByVisitorId" resultMap="BaseResultMap">
        select order_Id, order_description, visitor_id, room_order.hotel_id, result,stars,order_time
        from  room_order
        where room_order.visitor_id=#{visitorId} and result=4
    </select>
    <!--查询当前游客还未完成的订单-->
    <select id="queryNoFinishedOrderByVisitorId" resultMap="BaseResultMap">
        select order_Id, order_description, visitor_id, room_order.hotel_id, result,stars,order_time
        from  room_order
        <where>
            (result=0 or result=1 or result=2) and visitor_id=#{visitorId}
        </where>
    </select>
    <!--查询管理员已经审核过的订单-->
    <select id="queryCheckedOrderByAdminId" resultMap="BaseResultMap">
        select
        order_Id, order_description, visitor_id, room_order.hotel_id, result,room_order.stars,order_time
        from room_order,hotel,management
        where management.administrator_Id=#{adminId} and management.hotel_Id=hotel.hotel_Id and hotel.hotel_Id=room_order.hotel_id and room_order.result!=0
    </select>
    <!--查询管理员还没审核过的订单-->
    <select id="queryNoCheckedOrderByAdminId" resultMap="BaseResultMap">
        select
        order_Id, order_description, visitor_id, room_order.hotel_id, result,room_order.stars,order_time
        from room_order,hotel,management
        where management.administrator_Id=#{adminId} and management.hotel_Id=hotel.hotel_Id and hotel.hotel_Id=room_order.hotel_id and room_order.result=0
    </select>
</mapper>

